//file:noinspection GroovyAssignabilityCheck
plugins {
    id "java"
    id "com.vladsch.reverse-regex.java-conventions"
    id "maven-publish"
    id "signing"
}

def javaVersion = properties["javaVersion"] ?: "11"
def projectVersion = properties["projectVersion"] ?: "1.0.SNAPSHOT"
def projectGroup = properties["projectGroup"] ?: "com.vladsch.unknown"
def projectUrl = properties["projectUrl"] ?: "https://github.com/vsch/unknown"

group = projectGroup
version = projectVersion

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation "junit:junit:4.13.2"
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = "reverse-regex-util"
                description = "reverse regex implementation module"

                withXml {
                    asNode()
                            .appendNode('parent')
                            .with {
                                appendNode "groupId", projectGroup
                                appendNode "artifactId", "reverse-regex"
                                appendNode "version", projectVersion
                            }
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
/*
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/vsch/reverse-regex"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
*/
    }
}

signing {
    useGpgCmd()
    sign publishing.publications
}

// Set the JVM compatibility versions
compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

java {
    withJavadocJar()
    withSourcesJar()
}
